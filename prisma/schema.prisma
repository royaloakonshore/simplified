generator client {
  provider        = "prisma-client-js"
  output          = "../node_modules/.prisma/client"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public"]
}

model User {
  id                String           @id @default(cuid())
  name              String?
  email             String?          @unique
  emailVerified     DateTime?
  image             String?
  hashedPassword    String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  login             String?
  role              UserRole         @default(user)
  isAdmin           Boolean          @default(false)
  firstName         String?
  activeCompanyId   String?
  preferredLanguage CustomerLanguage @default(FI)
  accounts          Account[]
  invoices          Invoice[]
  orders            Order[]
  sessions          Session[]
  activeCompany     Company?  @relation("ActiveCompanyForUser", fields: [activeCompanyId], references: [id])
  memberOfCompanies Company[] @relation("CompanyMemberships")

  @@schema("public")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  User              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
  @@schema("public")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@schema("public")
}

model Allowlist {
  id        String   @id @default(cuid())
  email     String   @unique
  createdAt DateTime @default(now())

  @@schema("public")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@schema("public")
}

model Address {
  id            String      @id @default(cuid())
  customerId    String
  type          AddressType
  streetAddress String
  city          String
  postalCode    String
  countryCode   String
  customer      Customer    @relation(fields: [customerId], references: [id], onDelete: Cascade)

  @@schema("public")
}

model Customer {
  id                   String           @id @default(cuid())
  name                 String
  email                String?
  phone                String?
  vatId                String?
  customerNumber       String?          @unique
  ovtIdentifier        String?
  intermediatorAddress String?
  createdAt            DateTime         @default(now())
  updatedAt            DateTime         @updatedAt
  companyId            String?
  language             CustomerLanguage @default(FI)
  buyerReference       String?
  addresses            Address[]
  Company              Company?         @relation(fields: [companyId], references: [id])
  invoices             Invoice[]
  orders               Order[]

  @@index([companyId])
  @@index([name])
  @@index([email])
  @@index([vatId])
  @@schema("public")
}

model InventoryItem {
  id                    String                 @id @default(cuid())
  sku                   String?                @unique
  name                  String
  description           String?
  unitOfMeasure         String?
  costPrice             Decimal                @default(0)
  salesPrice            Decimal                @default(0)
  minimumStockLevel     Decimal                @default(0) @db.Decimal(10, 2)
  reorderLevel          Decimal?               @db.Decimal(10, 2)
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  companyId             String?
  qrIdentifier          String?                @unique
  quantityOnHand        Decimal                @default(0)
  showInPricelist       Boolean                @default(true)
  supplierId            String?
  internalRemarks       String?
  inventoryCategoryId   String?
  itemType              ItemType               @default(RAW_MATERIAL)
  defaultVatRatePercent Decimal?               @db.Decimal(5, 2)
  leadTimeDays          Int?
  vendorItemName        String?
  vendorSku             String?
  variant               String?
  dimensions            String?
  weight                Decimal?               @db.Decimal(10, 2)
  bom                   BillOfMaterial?        @relation("ManufacturedItemBOM")
  componentInBOMs       BillOfMaterialItem[]   @relation("ComponentItemInBOMs")
  company               Company?               @relation(fields: [companyId], references: [id], onDelete: Cascade)
  inventoryCategory     InventoryCategory?     @relation(fields: [inventoryCategoryId], references: [id])
  supplier              Supplier?              @relation(fields: [supplierId], references: [id])
  inventoryTransactions InventoryTransaction[]
  invoiceItems          InvoiceItem[]
  orderItems            OrderItem[]

  @@index([companyId])
  @@index([supplierId])
  @@index([inventoryCategoryId])
  @@index([itemType])
  @@index([showInPricelist])
  @@index([name])
  @@index([sku])
  @@index([quantityOnHand])
  @@index([reorderLevel])
  @@schema("public")
}

model InventoryTransaction {
  id        String          @id @default(cuid())
  itemId    String
  quantity  Decimal         @db.Decimal(10, 2)
  type      TransactionType
  reference String?
  note      String?
  createdAt DateTime        @default(now())
  item      InventoryItem   @relation(fields: [itemId], references: [id])

  @@schema("public")
}

model Order {
  id                  String      @id @default(cuid())
  customerId          String
  orderNumber         String      @unique
  status              OrderStatus @default(draft)
  notes               String?
  createdAt           DateTime    @default(now())
  updatedAt           DateTime    @updatedAt
  orderDate           DateTime    @default(now())
  orderType           OrderType   @default(work_order)
  userId              String
  deliveryDate        DateTime?
  productionStep      String?
  totalAmount         Decimal?    @db.Decimal(10, 2)
  companyId           String?
  qrIdentifier        String?     @unique
  originalQuotationId String?
  ourReference        String?
  customerNumber      String?
  invoices            Invoice[]   @relation("OrderToInvoices")
  Company             Company?    @relation(fields: [companyId], references: [id])
  customer            Customer    @relation(fields: [customerId], references: [id])
  originalQuotation   Order?      @relation("QuotationToWorkOrder", fields: [originalQuotationId], references: [id])
  derivedWorkOrders   Order[]     @relation("QuotationToWorkOrder")
  user                User        @relation(fields: [userId], references: [id])
  items               OrderItem[]

  @@index([customerId])
  @@index([status])
  @@index([orderType])
  @@index([companyId])
  @@index([originalQuotationId])
  @@schema("public")
}

model OrderItem {
  id                 String        @id @default(cuid())
  orderId            String
  inventoryItemId    String
  quantity           Decimal       @db.Decimal(10, 2)
  unitPrice          Decimal       @db.Decimal(10, 2)
  discountAmount     Decimal?      @db.Decimal(10, 2)
  discountPercentage Decimal?      @db.Decimal(5, 2)
  vatRatePercent     Decimal       @default(25.5) @db.Decimal(5, 2)
  rowFreeText        String?
  inventoryItem      InventoryItem @relation(fields: [inventoryItemId], references: [id])
  order              Order         @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("order_items")
  @@schema("public")
}

model Invoice {
  id                String        @id @default(cuid())
  invoiceNumber     String        @unique
  customerId        String
  orderId           String?
  status            InvoiceStatus @default(draft)
  invoiceDate       DateTime      @default(now())
  dueDate           DateTime
  notes             String?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt
  vatReverseCharge  Boolean       @default(false)
  creditNoteId      String?       @unique
  isCreditNote      Boolean       @default(false)
  isReminder        Boolean       @default(false)
  reminderSequence  Int?
  originalInvoiceId String?       @unique
  totalAmount       Decimal       @default(0) @db.Decimal(12, 2)
  totalVatAmount    Decimal       @default(0) @db.Decimal(12, 2)
  userId            String?
  companyId         String?
  referenceNumber   String?
  deliveryMethod    String?
  complaintPeriod   String?
  penaltyInterest   Decimal?
  ourReference      String?
  customerNumber    String?
  paymentTermsDays  Int?
  sellerReference   String?
  deliveryDate      DateTime?
  orderNumber       String?
  originalInvoice   Invoice?      @relation("CreditNote", fields: [originalInvoiceId], references: [id])
  creditNote        Invoice?      @relation("CreditNote")
  payments          Payment[]
  items             InvoiceItem[]
  Company           Company?      @relation(fields: [companyId], references: [id])
  customer          Customer      @relation(fields: [customerId], references: [id])
  order             Order?        @relation("OrderToInvoices", fields: [orderId], references: [id])
  user              User?         @relation(fields: [userId], references: [id])

  @@index([customerId])
  @@index([orderId])
  @@index([originalInvoiceId])
  @@index([companyId])
  @@index([status])
  @@index([invoiceDate])
  @@index([dueDate])
  @@index([referenceNumber])
  @@schema("public")
}

model InvoiceItem {
  id                   String        @id @default(cuid())
  invoiceId            String
  inventoryItemId      String
  description          String?
  quantity             Decimal       @db.Decimal(10, 2)
  unitPrice            Decimal       @db.Decimal(10, 2)
  vatRatePercent       Decimal       @db.Decimal(5, 2)
  discountAmount       Decimal?      @db.Decimal(10, 2)
  discountPercentage   Decimal?      @db.Decimal(5, 2)
  calculatedLineProfit Decimal?      @db.Decimal(10, 2)
  calculatedUnitCost   Decimal?      @db.Decimal(10, 2)
  calculatedUnitProfit Decimal?      @db.Decimal(10, 2)
  rowFreeText          String?
  inventoryItem        InventoryItem @relation(fields: [inventoryItemId], references: [id])
  invoice              Invoice       @relation(fields: [invoiceId], references: [id], onDelete: Cascade)

  @@map("invoice_items")
  @@schema("public")
}

model Payment {
  id          String   @id @default(cuid())
  invoiceId   String
  amount      Decimal  @db.Decimal(10, 2)
  paymentDate DateTime @default(now())
  notes       String?
  invoice     Invoice  @relation(fields: [invoiceId], references: [id])

  @@schema("public")
}

model Settings {
  id                             String   @id @default(cuid())
  companyName                    String
  vatId                          String
  bankName                       String?
  city                           String
  postalCode                     String
  streetAddress                  String
  bankAccountBIC                 String
  bankAccountIBAN                String
  countryCode                    String
  countryName                    String
  createdAt                      DateTime @default(now())
  domicile                       String
  sellerIdentifier               String?
  sellerIntermediatorAddress     String?
  email                          String?  @map("settings_email")
  phone                          String?  @map("settings_phone")
  updatedAt                      DateTime @updatedAt
  website                        String?
  defaultInvoicePaymentTermsDays Int?
  defaultVatRatePercent          Decimal? @db.Decimal(5, 2)

  @@schema("public")
}

model BillOfMaterial {
  id                  String               @id @default(cuid())
  name                String               @unique
  manufacturedItemId  String?              @unique
  manualLaborCost     Decimal              @default(0)
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  companyId           String?
  description         String?
  totalCalculatedCost Decimal              @default(0)
  company             Company?             @relation(fields: [companyId], references: [id], onDelete: Cascade)
  manufacturedItem    InventoryItem?       @relation("ManufacturedItemBOM", fields: [manufacturedItemId], references: [id], onDelete: Cascade)
  items               BillOfMaterialItem[]

  @@index([companyId])
  @@schema("public")
}

model BillOfMaterialItem {
  id               String         @id @default(cuid())
  billOfMaterialId String
  quantity         Decimal
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  companyId        String?
  componentItemId  String
  billOfMaterial   BillOfMaterial @relation(fields: [billOfMaterialId], references: [id], onDelete: Cascade)
  company          Company?       @relation(fields: [companyId], references: [id], onDelete: Cascade)
  componentItem    InventoryItem  @relation("ComponentItemInBOMs", fields: [componentItemId], references: [id], onDelete: Cascade)

  @@unique([billOfMaterialId, componentItemId])
  @@index([companyId])
  @@schema("public")
}

model Company {
  id                           String               @id @default(cuid())
  createdAt                    DateTime             @default(now())
  updatedAt                    DateTime             @updatedAt
  name                         String               @unique
  billOfMaterials              BillOfMaterial[]
  billOfMaterialItems          BillOfMaterialItem[]
  customers                    Customer[]
  inventoryCategories          InventoryCategory[]
  inventoryItems               InventoryItem[]
  invoices                     Invoice[]
  orders                       Order[]
  suppliers                    Supplier[]
  usersWithThisAsActiveCompany User[]               @relation("ActiveCompanyForUser")
  companyMembers               User[]               @relation("CompanyMemberships")

  @@schema("public")
}

model Supplier {
  id             String          @id @default(cuid())
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  name           String
  contactInfo    String?
  companyId      String?
  inventoryItems InventoryItem[]
  company        Company?        @relation(fields: [companyId], references: [id], onDelete: Cascade)

  @@index([companyId])
  @@schema("public")
}

model InventoryCategory {
  id             String          @id @default(cuid())
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  name           String
  companyId      String?
  description    String?
  company        Company?        @relation(fields: [companyId], references: [id], onDelete: Cascade)
  inventoryItems InventoryItem[]

  @@unique([companyId, name])
  @@index([companyId])
  @@schema("public")
}

enum UserRole {
  user
  admin

  @@schema("public")
}

enum AddressType {
  billing
  shipping

  @@schema("public")
}

enum TransactionType {
  purchase
  sale
  adjustment

  @@schema("public")
}

enum OrderStatus {
  draft
  confirmed
  in_production
  shipped
  delivered
  cancelled
  invoiced

  @@schema("public")
}

enum OrderType {
  quotation
  work_order

  @@schema("public")
}

enum InvoiceStatus {
  draft
  sent
  paid
  overdue
  cancelled
  credited

  @@schema("public")
}

enum ItemType {
  RAW_MATERIAL
  MANUFACTURED_GOOD

  @@schema("public")
}

enum CustomerLanguage {
  EN
  FI
  SE

  @@schema("public")
}
